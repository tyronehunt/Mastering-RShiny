shiny::runApp()
ui <- fluidPage(
textInput("name", "What's your name?"),
numericInput("age", "How old are you?"),
textOutput("greeting")
)
runApp('app_ch2_ex1.R')
runApp('app_ch2_ex1.R')
runApp('app_ch2_ex1.R')
runApp('app_ch2_ex1.R')
runApp('app_ch2_ex1.R')
runApp('app_ch2_ex1.R')
runApp('app_ch2_ex1.R')
tee <- "Hello " +  "tyrone"
tee <- "Hello ",  "tyrone"
tee <- concatenate("Hello ","tyrone")
paste("Hello", "world", sep=" ")
runApp('app_ch2_ex1.R')
runApp('app_ch2_ex1.R')
runApp('app_ch2_ex1.R')
runApp('app_ch2_ex1.R')
runApp('app_ch2_ex1.R')
runApp('app_ch2_ex2.R')
runApp('app_ch2_ex4.R')
runApp('app_ch2_ex5.R')
runApp('app_ch2_ex5.R')
runApp('app_ch2_ex5.R')
runApp('app_ch3.R')
runApp('app_ch3.R')
runApp('app_ch3.R')
runApp('app_ch3.R')
clear
runApp('app_ch3_outputs.R')
runApp('app_ch3_outputs.R')
runApp('app_ch3_outputs.R')
runApp('app_ch3_layouts.R')
runApp('app_ch3_layouts.R')
shinyApp(
ui = tagList(
shinythemes::themeSelector(),
navbarPage(
theme = "cerulean",
"shinythemes",
tabPanel("Navbar 1",
sidebarPanel(
fileInput("file", "File input:"),
textInput("txt", "Text input:", "general"),
sliderInput("slider", "Slider input:", 1, 100, 30),
tags$h5("Default actionButton:"),
actionButton("action", "Search"),
tags$h5("actionButton with CSS class:"),
actionButton("action2", "Action button", class = "btn-primary")
),
mainPanel(
tabsetPanel(
tabPanel("Tab 1",
h4("Table"),
tableOutput("table"),
h4("Verbatim text output"),
verbatimTextOutput("txtout"),
h1("Header 1"),
h2("Header 2"),
h3("Header 3"),
h4("Header 4"),
h5("Header 5")
),
tabPanel("Tab 2", "This panel is intentionally left blank"),
tabPanel("Tab 3", "This panel is intentionally left blank")
)
)
),
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
)
),
server = function(input, output) {
output$txtout <- renderText({
paste(input$txt, input$slider, format(input$date), sep = ", ")
})
output$table <- renderTable({
head(cars, 4)
})
}
)
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch3_layouts.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch3_layouts.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch3_layouts.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch3_layouts.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch3_layouts.R', echo=TRUE)
shinyApp(
ui = tagList(
shinythemes::themeSelector(),
navbarPage(
theme = "cerulean",
"Head Title",
tabPanel("Navbar 1",
sidebarPanel(
fileInput("file", "File input:"),
textInput("txt", "Text input:", "general"),
sliderInput("slider", "Slider input:", 1, 100, 30),
tags$h5("Default actionButton:"),
actionButton("action", "Search"),
tags$h5("actionButton with CSS class:"),
actionButton("action2", "Action button", class = "btn-primary")
),
mainPanel(
tabsetPanel(
tabPanel("Tab 1",
h4("Table"),
tableOutput("table"),
h4("Verbatim text output"),
verbatimTextOutput("txtout"),
h1("Header 1"),
),
tabPanel("Tab 2", "This panel is intentionally left blank"),
tabPanel("Tab 3", "This panel is intentionally left blank")
)
)
),
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
)
),
server = function(input, output) {
output$txtout <- renderText({
paste(input$txt, input$slider, format(input$date), sep = ", ")
})
output$table <- renderTable({
head(cars, 4)
})
}
)
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch3_layouts.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch3_layouts.R', echo=TRUE)
shinyApp(
ui = tagList(
shinythemes::themeSelector(),
navbarPage(
theme = "cerulean",
"Head Title",
tabPanel("Navbar 1",
sidebarPanel(
fileInput("file", "File input:"),
tags$h5("actionButton with CSS class:"),
actionButton("action2", "Action button", class = "btn-primary")
),
mainPanel(
tabsetPanel(
tabPanel("Tab 1",
h4("Table"),
tableOutput("table"),
h4("Verbatim text output"),
verbatimTextOutput("txtout"),
h1("Header 1"),
),
tabPanel("Tab 2", "This panel is intentionally left blank"),
tabPanel("Tab 3", "This panel is intentionally left blank")
)
)
),
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
)
),
server = function(input, output) {
output$txtout <- renderText({
paste(input$txt, input$slider, format(input$date), sep = ", ")
})
output$table <- renderTable({
head(cars, 4)
})
}
)
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch3_layouts.R', echo=TRUE)
shinyApp(
ui = tagList(
shinythemes::themeSelector(),
navbarPage(
theme = "cerulean",
"Head Title",
tabPanel("Navbar 1",
sidebarPanel(
fileInput("file", "File input:"),
tags$h5("actionButton with CSS class:"),
actionButton("action2", "Action button", class = "btn-primary")
),
mainPanel(
tabsetPanel(
tabPanel("Tab 1",
h4("Table"),
tableOutput("table"),
h4("Verbatim text output"),
verbatimTextOutput("txtout"),
h1("Header 1"),
),
tabPanel("Tab 2", "This panel is intentionally left blank"),
tabPanel("Tab 3", "This panel is intentionally left blank")
)
)
),
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
)
),
server = function(input, output) {
output$txtout <- renderText({
paste(input$txt, input$slider, format(input$date), sep = ", ")
})
output$table <- renderTable({
head(cars, 4)
})
}
)
runApp('app_ch3_layouts.R')
runApp('app_ch3_freshtheme_template.R')
runApp('app_ch3_freshtheme_template.R')
install.packages("fresh")
runApp('app_ch3_freshtheme_template.R')
runApp('app_ch3_shinydashboard_template.R')
install.packages("shinydashboard")
runApp('app_ch3_shinydashboard_template.R')
runApp('app_ch3_freshtheme_template.R')
runApp('app_ch3_freshtheme_template.R')
runApp('app_ch3_freshtheme_template.R')
runApp('app_ch3_shinydashboard_template.R')
runApp('app_ch3_ex4.R')
library(shiny); runApp('app_ch4.R')
runApp('app_ch4.R')
runApp('app_ch4.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp('app_ch4.R')
library(shiny); runApp('app_ch4.R')
library(shiny); runApp('app_ch4.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp('app_ch4.R')
runApp('app_ch4_reactive_timing.R')
runApp('app_ch4_observers.R')
runApp('app_ch4_observers.R')
runApp('app_ch6_workflow')
runApp('app_ch6_workflow')
runApp('app_ch6_workflow.R')
traceback()
runApp('app_ch6_workflow.R')
runApp('app_ch6_workflow.R')
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch6_workflow.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch6_workflow.R', echo=TRUE)
library(tidyverse)
library(readr)
sales <- readr::read_csv("sales-dashboard/sales_data_sample.csv")
sales
sales <- sales[c("TERRITORY", "ORDERDATE", "ORDERNUMBER", "PRODUCTCODE", "QUANTITYORDERED", "PRICEEACH")]
sales
source('~/.active-rstudio-document', echo=TRUE)
library(tidyverse)
library(readr)
sales <- readr::read_csv("sales-dashboard/sales_data_sample.csv")
sales <- sales[c("TERRITORY", "ORDERDATE", "ORDERNUMBER", "PRODUCTCODE", "QUANTITYORDERED", "PRICEEACH")]
sales
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch6_workflow.R', echo=TRUE)
runApp('app_ch6_workflow.R')
runApp('app_ch6_workflow.R')
runApp('app_ch6_workflow.R')
source('~/.active-rstudio-document', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch6_workflow.R', echo=TRUE)
runApp('app_ch9_uploads_downloads.R')
library(shiny); runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
runApp('app_ch9_uploads_part2.R')
library(shiny); runApp('app_ch9_downloads.R')
runApp('app_ch9_upload_download_casestudy.R')
runApp('app_ch9_upload_download_casestudy.R')
install.packages("janitor")
runApp('app_ch9_upload_download_casestudy.R')
runApp('app_ch18_reactivity.R')
runApp('app_ch18_reactivity.R')
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/app_ch18_reactivity.R', echo=TRUE)
runApp('app_ch18_reactivity.R')
here()
library(here)
library(shiny); runApp('app_ch7_graphics.R')
runApp('app_ch7_graphics.R')
runApp('app_ch7_graphics.R')
runApp('app_ch7_graphics.R')
runApp('app_ch7_graphics.R')
View(info)
runApp('app_ch7_graphics.R')
runApp('app_ch7_graphics.R')
runApp('app_ch7_graphics.R')
runApp('app_ch7_graphics.R')
library(shiny); runApp('app_ch15_modules.R')
ui <- fluidPage(
histogramUI("hist1"),
textOutput("out")
)
runApp('app_ch15_modules_example.R')
library(shiny)
ui <- fluidPage(
datasetInput("dataset", filter = filter),
tableOutput("data")
)
packageVersion("shiny")
install.packages("shiny")
packageVersion("shiny")
library(shiny); runApp('R:ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
library(here)
runApp('app_ch15_modules_example.R')
here(ch15_modules_example.R)
runApp('app_ch15_modules_example.R')
here(ch15_modules_example.R)
here()
detach("package:here", unload=TRUE)
library(here)
detach("package:here", unload=TRUE)
setwd("/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app")
here()
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
ui <- fluidPage(
source('/Volumes/GoogleDrive/My Drive/1. Learning/rshiny_mastering_book/first_app/ch15_modules_example.R', echo=TRUE)
d
runApp('app_ch15_modules_example.R')
packageVersion("shiny")
ls("package:datasets")
datasetInput <- function(id, filter = NULL) {
names <- ls("package:datasets")
if (!is.null(filter)) {
data <- lapply(names, get, "package:datasets")
names <- names[vapply(data, filter, logical(1))]
}
selectInput(NS(id, "dataset"), "Pick a dataset", choices = names)
}
datasetInput('test')
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
data <- lapply(names, get, "package:datasets")
names <- ls("package:datasets")
class(names)
data <- lapply(names, get, "package:datasets")
View(data)
class(data)
str(data)
dput(head(data))
class(data)
unlist(data)
data2 <-unlist(data2)
data2 <-unlist(data)
data2
choices = ls("package:datasets")
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
runApp('app_ch15_modules_example.R')
